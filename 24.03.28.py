# 한번 싸악 복습 한번 하고 진도 나가자


# 변수 할당
'''a1 , a2 , a3 , a4 = 10 , 20 , 30 , None
print(a1,a2,a3,a4)'''
# 위처럼 할당도 가능하고 ~~
'''a1 = a2 = a3 = a4 = 10
print(a1,a2,a3,a4)'''
# 이렇게 한번에 같은 값을 여러 변수에 동시 할당도 가능하다 !~
'''del(a1,a2,a3,a4)'''
# 위처럼 하면 괄호 안에 들어간 변수 자체가 사라져서 접근 시 오류 발생함. 삭제 함수임.


# 인풋 함수 
# 인풋 안에 들어가는 데이터를 프롬프트라고 합니다.
# 파이썬은 받은 데이터를 무조건 문자열 형태로 저장합니다. 입력받은 형태를 바꾸려면 타입변경함수를 사용하면 됩니다.
'''a = input("값을 입력하세요 : ") 
print(type(a))'''
# 위 인풋에서 정수를 입력해도 타입은 문자열인것을 확인 가능합니다. 즉 정수로 변경하는 함수인 int() 를 씌어줘야 합니다.


# 인풋으로 값을 동시에 두 개 이상 입력받고 싶다면 ???
'''a,b,c,d = input("값 4개를 띄어쓰기로 구분하여 입력하세요 : ").split()
print(a,b,c,d)'''
# .split()안에 "" 안의 값으로 구분이 가능한 여러 값을 입력받을 수 있다. 여기서 split의 디폴트값은 공백이다. 만약 /로 구분받고 싶다면??
'''a,b,c = input("프롬프트 입력 : ").split('/') ; print(a,b,c)'''
# 위처럼 하면 됩니당


# 인풋으로 받은 모든 값의 자료형을 동시에 모두 변경하는 방법은 map()을 쓰면 됩니다.
'''a,b,c = map(int,input("프롬프트 4개 입력 : ").split()) ; print(type(a),type(b),type(c))'''
# 위처럼 map과 타입을 지정하면 입력받은 모든 값이 지정한 타입으로 일괄 변경됩니당


# 출력함수에서 sep 조정 : 다음 출력치까지의 간격을 지정하는 방법
'''a,b,c=1,2,3
print(a,b,c,sep="!!!")'''
# 위처럼 하면 각 출력되는 변수값 사이에 !!! 가 삽입된 채 출력됩니당


# end 함수 : 다음 프린트문까지 이어질 때 디폴트값 변경 : 디폴트 설정은 \n 임.
'''print("south korea",end="  ")
print("seoul")
print("gwangju")'''
# 위처럼 하면 첫번째와 두번째는 공백 몇칸 간격으로 이어지고, 2번, 3번은 디폴트인 \n 처리가 됩니당.


# 문자열 만들기 !! 밑에 문자열 만드는 거랑, 주석 모두 '''   ''' 로 사용 가능함. """ """ 도 마찬가지 입니다.
a = '''이렇게 하면
이렇게 띄어쓰기를 해도
같은 문자열 데이터로
취금된다. \"도 마찬가지여 ~~'''
#print(a)


# 리스트
# 값들을 일렬로 늘어놓은 자료형으로 대괄호로 묶도 콤마로 값을 구분합니다. 안의 값을 변경하는것이 가능하다는 특징을 가집니다.
# 리스트 안의 값을 요소(엘레먼트)라고 부릅니다. 빈 리스트를 만드려면 [] 또는 list() 명령어로 만듭니다.
# 빈 리스트는 새로운 값을 추가해 나갈 때 사용합니다.


# range 활용
# 연속되는 숫자를 생성하는 함수입니다. range(a)는 0부터 a-1까지 a개의 수를 생성합니다.
# 출력되는 결과의 데이터타입은 range형입니다.
''' a = range(1,10,3) ; print(a,type(a),sep="\n") '''
# 출력치가 range형인데 list 명령어로 감싸면 리스트형의 데이터가 됩니다.
# range(a,b) 로 하면 a부터 b-1까지 요소가 들어있는 range형 데이터가 나온다.
# range(a,b,c) 는 a부터 b-1까지 c의 간격으로 range형 데이터 형셩.
''' print(list(range(10,100,15))) '''
# 위처럼 하면 10,25,40,55,70,85 까지만 출력됩니다. 100-1 까지 안의 범위값을 출력하기에 100은 출력되지 않았다잉


# 리스트 요소 접근
'''a = [10,20,30,40,50,60]
del(a[2])
print(a)'''
